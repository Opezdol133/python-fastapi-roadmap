**Введение в среду разработки**
После запуска pyCharm я перехожу к созданию проекта. Проект был создан.
Для того чтобы обратиться к среде python через терминал - достаточно прописать команду python, а для того, чтобы выполнить код из файла - необходимо прописать команду - python "название файла".
Я начал тестировать с команды print("Hello world"). Прописав в консоль python main.py - консоль вывела Hello world.

**Базовые операции**
-Для создания комментария необходимо прописать в начале строки знак #.
>Пример:
#comment

-Функция print
Функция выводит необходимые данные, которые вписываются в скобках после самой функции. Также, можно выводить числа, как строку, так и число
>Пример:
print("Result: 1") - выведет Result: 1 и при этом 1 - будет частью строки;
print("Result: ", 1, 2, 3) - выведет Result: 1 2 3 - при этом числа остануться числами.

sep=""
Также, можно удалить пробелы между между данными в выводе - для этого необходимо ввести разделитель sep="" в конце скобок в print.
В ковычках sep="" стоит символ, которым будут разделяться данные.
>Пример:
print("Result: ", 1, 14, 20, sep="/") - выведет Result: 1/14/20. 

end="" - определяет символ в конце строки.
По-умолчанию - метод print после завершения вывода делает вынос на следующую строку, но можно убрать перенос с помощью функции end=""
>Пример:
print("Result: ", 1 , 2, end=" ")
print("Second string.")
Вывод: Result: 1 2 Second string.

\n - перенос на следующую строку
\t 

В print можно выполнять математические действия 
** и pow(число, n) - во- возведение в степень
// - деление и округление сразу
>Пример:
print("Result:", 5+5) - выведет Result: 10

min() и max() - находят минимальное и максимальное значение, введенное в скобках.
>Пример
print("Result:",min(1,2,3,4,5)) - выведет Result: 1 

abs() - возводит отрицательное число в положительное
round(число/число) - при деленнии окургляет к ближайшему

input() - функция, в которой информацию задаёт пользователь
>Пример
input("Введите свой возраст: ")
